# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/ChewC',
                'doc_host': 'https://cjgo.github.io',
                'git_url': 'https://github.com/cjgo/ChewC',
                'lib_path': 'chewc'},
  'syms': { 'chewc.callback': { 'chewc.callback.ActionTrackingCallback': ('callback.html#actiontrackingcallback', 'chewc/callback.py'),
                                'chewc.callback.ActionTrackingCallback.__init__': ( 'callback.html#actiontrackingcallback.__init__',
                                                                                    'chewc/callback.py'),
                                'chewc.callback.ActionTrackingCallback._log_action_data': ( 'callback.html#actiontrackingcallback._log_action_data',
                                                                                            'chewc/callback.py'),
                                'chewc.callback.ActionTrackingCallback._on_step': ( 'callback.html#actiontrackingcallback._on_step',
                                                                                    'chewc/callback.py'),
                                'chewc.callback.ActionTrackingCallback._on_training_start': ( 'callback.html#actiontrackingcallback._on_training_start',
                                                                                              'chewc/callback.py'),
                                'chewc.callback.ActionTrackingCallback.on_training_end': ( 'callback.html#actiontrackingcallback.on_training_end',
                                                                                           'chewc/callback.py'),
                                'chewc.callback.AverageFinalGenerationCallback': ( 'callback.html#averagefinalgenerationcallback',
                                                                                   'chewc/callback.py'),
                                'chewc.callback.AverageFinalGenerationCallback.__init__': ( 'callback.html#averagefinalgenerationcallback.__init__',
                                                                                            'chewc/callback.py'),
                                'chewc.callback.AverageFinalGenerationCallback._log_data': ( 'callback.html#averagefinalgenerationcallback._log_data',
                                                                                             'chewc/callback.py'),
                                'chewc.callback.AverageFinalGenerationCallback._on_step': ( 'callback.html#averagefinalgenerationcallback._on_step',
                                                                                            'chewc/callback.py'),
                                'chewc.callback.AverageFinalGenerationCallback._plot_action_values': ( 'callback.html#averagefinalgenerationcallback._plot_action_values',
                                                                                                       'chewc/callback.py'),
                                'chewc.callback.AverageFinalGenerationCallback.on_training_end': ( 'callback.html#averagefinalgenerationcallback.on_training_end',
                                                                                                   'chewc/callback.py')},
            'chewc.lab': { 'chewc.lab.SelectionIntensityEnvironment': ('lab.html#selectionintensityenvironment', 'chewc/lab.py'),
                           'chewc.lab.SelectionIntensityEnvironment.__init__': ( 'lab.html#selectionintensityenvironment.__init__',
                                                                                 'chewc/lab.py'),
                           'chewc.lab.SelectionIntensityEnvironment._get_info': ( 'lab.html#selectionintensityenvironment._get_info',
                                                                                  'chewc/lab.py'),
                           'chewc.lab.SelectionIntensityEnvironment._get_obs': ( 'lab.html#selectionintensityenvironment._get_obs',
                                                                                 'chewc/lab.py'),
                           'chewc.lab.SelectionIntensityEnvironment.reset': ( 'lab.html#selectionintensityenvironment.reset',
                                                                              'chewc/lab.py'),
                           'chewc.lab.SelectionIntensityEnvironment.step': ('lab.html#selectionintensityenvironment.step', 'chewc/lab.py')},
            'chewc.policy': { 'chewc.policy.CustomActorCriticPolicy': ('policy.html#customactorcriticpolicy', 'chewc/policy.py'),
                              'chewc.policy.CustomActorCriticPolicy.__init__': ( 'policy.html#customactorcriticpolicy.__init__',
                                                                                 'chewc/policy.py'),
                              'chewc.policy.CustomActorCriticPolicy._build_mlp_extractor': ( 'policy.html#customactorcriticpolicy._build_mlp_extractor',
                                                                                             'chewc/policy.py'),
                              'chewc.policy.CustomFeatureExtractor': ('policy.html#customfeatureextractor', 'chewc/policy.py'),
                              'chewc.policy.CustomFeatureExtractor.__init__': ( 'policy.html#customfeatureextractor.__init__',
                                                                                'chewc/policy.py'),
                              'chewc.policy.CustomFeatureExtractor.forward': ( 'policy.html#customfeatureextractor.forward',
                                                                               'chewc/policy.py'),
                              'chewc.policy.CustomNetwork': ('policy.html#customnetwork', 'chewc/policy.py'),
                              'chewc.policy.CustomNetwork.__init__': ('policy.html#customnetwork.__init__', 'chewc/policy.py'),
                              'chewc.policy.CustomNetwork.forward': ('policy.html#customnetwork.forward', 'chewc/policy.py'),
                              'chewc.policy.CustomNetwork.forward_actor': ('policy.html#customnetwork.forward_actor', 'chewc/policy.py'),
                              'chewc.policy.CustomNetwork.forward_critic': ('policy.html#customnetwork.forward_critic', 'chewc/policy.py')},
            'chewc.sim': { 'chewc.sim.Genome': ('sim.html#genome', 'chewc/sim.py'),
                           'chewc.sim.Genome.__init__': ('sim.html#genome.__init__', 'chewc/sim.py'),
                           'chewc.sim.Population': ('sim.html#population', 'chewc/sim.py'),
                           'chewc.sim.Population.__init__': ('sim.html#population.__init__', 'chewc/sim.py'),
                           'chewc.sim.SimParams': ('sim.html#simparams', 'chewc/sim.py'),
                           'chewc.sim.SimParams.__init__': ('sim.html#simparams.__init__', 'chewc/sim.py'),
                           'chewc.sim.Trait': ('sim.html#trait', 'chewc/sim.py'),
                           'chewc.sim.Trait.__init__': ('sim.html#trait.__init__', 'chewc/sim.py'),
                           'chewc.sim.breed': ('sim.html#breed', 'chewc/sim.py'),
                           'chewc.sim.bv': ('sim.html#bv', 'chewc/sim.py'),
                           'chewc.sim.calculate_breeding_value': ('sim.html#calculate_breeding_value', 'chewc/sim.py'),
                           'chewc.sim.create_pop': ('sim.html#create_pop', 'chewc/sim.py'),
                           'chewc.sim.create_progeny': ('sim.html#create_progeny', 'chewc/sim.py'),
                           'chewc.sim.create_random_pop': ('sim.html#create_random_pop', 'chewc/sim.py'),
                           'chewc.sim.phenotype': ('sim.html#phenotype', 'chewc/sim.py'),
                           'chewc.sim.random_crosses': ('sim.html#random_crosses', 'chewc/sim.py'),
                           'chewc.sim.recombine': ('sim.html#recombine', 'chewc/sim.py'),
                           'chewc.sim.scale_values': ('sim.html#scale_values', 'chewc/sim.py'),
                           'chewc.sim.set_seed': ('sim.html#set_seed', 'chewc/sim.py'),
                           'chewc.sim.truncation_selection': ('sim.html#truncation_selection', 'chewc/sim.py'),
                           'chewc.sim.update_pop': ('sim.html#update_pop', 'chewc/sim.py')}}}
